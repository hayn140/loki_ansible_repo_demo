---
- name: Playbook Control Lab
  hosts: webservers
  vars_files: vars.yml
  tasks:
    #Fail fast message

    - name: "Check if {{ min_ram_mb }} MiB RAM available and not running RedHat"
      ansible.builtin.fail:
        msg: "System doesn't have at least {{ min_ram_mb }} MiB  and is not running RedHat Linux"
      when: ansible_facts.distribution != "RedHat" and ansible_facts.ansible_memtotal_mb < min_ram_mb         

    #Install all packages

    - name: Ensure required packages are present
      ansible.builtin.package:
        name: "{{ packages }}"
        state: present

    #Enable and start services

    - name: Start and Enable all services
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ services }}"

    #Block of config tasks
    - name: Setting up the SSL cert directory and config files
      block:
        - name: "Verify that {{ ssl_cert_dir }} exists on {{ inventory_hostname }}"
          ansible.builtin.file:
            path: "{{ ssl_cert_dir }}"
            state: directory

        - name: "Copy all files to {{ inventory_hostname }}"
          ansible.builtin.copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: 0644
          loop: "{{ web_config_files }}"
          notify: Restart web service

      rescue:
        - name: Rescue task 
          ansible.builtin.debug:
            msg: >
              "One or more of the configuration 
              changes failed, 
              but the web service 
              is still active."

      always:
        - name: Restart web services
          ansible.builtin.service:
            name: "{{ web_service }}"
            state: restarted

    #Configure the firewall

    - name: Add http and https to firewalld
      ansible.posix.firewalld:
        service: "{{ item }}"
        state: enabled
        immediate: true
        permanent: true
      loop:
        - http
        - https

  #Add handlers
  handlers:
    - name: Restart web service
      ansible.builtin.service:
        name: "{{ web_service }}"
        state: restarted

